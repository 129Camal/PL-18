%{

#include <string.h>
#include <stdio.h>
#include <glib.h>	

void insere(GHashTable* table, char* value);
void placemark(FILE* kml);
void begin(FILE* kml);

GHashTable* hashLon;
GHashTable* hashLat;
GHashTable* elevation;

FILE* kml;
int i = 1;

%}

%%

lat\=\"\-?[0-9]+\.*[0-9]* { ECHO; insere(hashLat, yytext+5);}
lon\=\"\-?[0-9]+\.*[0-9]* { ECHO; insere(hashLon, yytext+5);}
\<ele\>[0-9]+\.*[0-9]* { ECHO; insere(elevation, yytext+5); i++;}

%%

int main(int argc, char** argv){

	hashLon = g_hash_table_new(g_direct_hash, g_direct_equal);
	hashLat = g_hash_table_new(g_direct_hash, g_direct_equal);
	elevation = g_hash_table_new(g_direct_hash, g_direct_equal);

	
	kml = fopen("result.kml","w");

	if(argc == 2)
		yyin = fopen(argv[1],"r");
	
	yylex();

	begin(kml);
	placemark(kml);
	g_hash_table_destroy(hashLon);	
	g_hash_table_destroy(hashLat);
	g_hash_table_destroy(elevation);
	return 0;
}

void begin(FILE* kml){
	fprintf(kml, "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
	fprintf(kml, "<kml xmlns=\"http://earth.google.com/kml/2.1\">\n");
}

void placemark(FILE* kml){
	GHashTableIter iter;
    gpointer key, value;

    fprintf(kml, "<Document>\n");
    fprintf(kml, "	<Style id=\"redline\">\n");
	fprintf(kml, "		<LineStyle>\n");
	fprintf(kml, "			<color>ff0000ff</color>\n");
	fprintf(kml, "			<width>1</width>\n");
	fprintf(kml, "		</LineStyle>\n");
	fprintf(kml, " 	</Style>\n");
	fprintf(kml, "	<Placemark>\n");
	fprintf(kml, "		<name>Rota 1</name>\n");
	fprintf(kml, "		<styleUrl>#redline</styleUrl>\n");
	fprintf(kml, "	<LineString>\n");
	fprintf(kml, "		<tessellate>1</tessellate>\n");
	fprintf(kml, "		<coordinates>\n");

	for(int p=1; p<i; p++){
		char* lat = g_hash_table_lookup(hashLat, GINT_TO_POINTER(p));
    	char* lon = g_hash_table_lookup(hashLon, GINT_TO_POINTER(p));
    	char* ele = g_hash_table_lookup(elevation, GINT_TO_POINTER(p));

    	fprintf(kml, "		%s,%s,%s\n", lon, lat, ele);

    }

	fprintf(kml, "		</coordinates>\n");
	fprintf(kml, "	</LineString>\n");
	fprintf(kml, "	</Placemark>\n");
	fprintf(kml, "</Document>\n\n");
	fprintf(kml, "</kml>\n");
}

void insere(GHashTable* table, char* value){

	char* new = strdup(value);
	g_hash_table_insert(table, GINT_TO_POINTER(i), new);

}


